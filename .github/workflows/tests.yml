# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#
name: tests
on:
  pull_request:
    branches: master
    types: [synchronize, opened, reopened, ready_for_review, unlabeled]
    paths-ignore:
      - 'README.md'
  push:
    branches: master
    paths-ignore:
      - 'README.md'
  # For systems with an upstream API that could drift unexpectedly (like most SaaS systems, etc.),
  # we recommend testing at a regular interval not necessarily tied to code changes. This will 
  # ensure you are alerted to something breaking due to an API change, even if the code did not
  # change.
  # schedule:
  #   - cron: '0 13 * * *'
jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:

    - name: Set up Go
      uses: actions/setup-go@v3.3.1
      with:
        go-version: '1.15'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2.3.4

    - name: Get dependencies
      run: |
        go mod download

    - name: Build
      run: |
        go build -v .

  # run acceptance tests in a matrix with Terraform core versions
  test:
    name: Acceptance Tests - terraform v${{matrix.terraform}} - auth with ${{matrix.authsecrets.name}}
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      max-parallel: 1 #limits on the PowerBI API can Too Many Request errors in the tests
      matrix:

        # list whatever Terraform versions here you would like to support
        terraform:
          - '0.12.29'
          - '0.13.4'
          - '0.14.6'

        # list to determine different auth options. Contains only secret name as cant reference secrets directly here
        authsecrets:
          - name: password with admin
            powerbi_tenant_id: POWERBI_TENANT_ID
            powerbi_client_id: POWERBI_CLIENT_ID
            powerbi_client_secret: POWERBI_CLIENT_SECRET
            powerbi_username: POWERBI_USERNAME
            powerbi_password: POWERBI_PASSWORD

          - name: client credentials
            powerbi_tenant_id: CLIENT_CREDENTIALS_POWERBI_TENANT_ID
            powerbi_client_id: CLIENT_CREDENTIALS_POWERBI_CLIENT_ID
            powerbi_client_secret: CLIENT_CREDENTIALS_POWERBI_CLIENT_SECRET
            powerbi_username: EMPTY
            powerbi_password: EMPTY
        
       

    steps:

    - name: Set up Go
      uses: actions/setup-go@v3.3.1
      with:
        go-version: '1.15'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2.3.4

    - name: Get dependencies
      run: |
        go mod download
        
    - name: TF acceptance tests
      timeout-minutes: 10
      env:
        TF_ACC: "1"
        TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}
        POWERBI_TENANT_ID: ${{ secrets[matrix.authsecrets.powerbi_tenant_id] }}
        POWERBI_CLIENT_ID: ${{ secrets[matrix.authsecrets.powerbi_client_id] }}
        POWERBI_CLIENT_SECRET: ${{ secrets[matrix.authsecrets.powerbi_client_secret] }}
        POWERBI_USERNAME: ${{ secrets[matrix.authsecrets.powerbi_username] }}
        POWERBI_PASSWORD: ${{ secrets[matrix.authsecrets.powerbi_password] }}
        POWERBI_SECONDARY_USERNAME: ${{ secrets.POWERBI_SECONDARY_USERNAME }}
        POWERBI_IS_PREMIUM: ${{ secrets.POWERBI_IS_PREMIUM }}
        POWERBI_CAPACITY_ID: ${{ secrets.POWERBI_CAPACITY_ID }}
        # Set whatever additional acceptance test env vars here. You can
        # optionally use data from your repository secrets using the
        # following syntax:
        # SOME_VAR: ${{ secrets.SOME_VAR }}

      run: |
        go test -v -cover ./internal/powerbi/
